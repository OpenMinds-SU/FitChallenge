@model Fmi.OpenMinds.FitChallenge.Web.Models.WorkoutViewModel
@using Fmi.OpenMinds.FitChallenge.Models 
<h2>Create workout</h2>
@using (Html.BeginForm())
{
    @Html.ValidationSummary()

    <p>Enter the name of the muscle group you want to create?</p>
    <div class="form-group">
        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Enter name" })
    </div>
    <div class="form-group">
        @Html.Label("Muscle groups:")
        @Html.DropDownList("MuscleGroups", new SelectList(Enum.GetNames(typeof(MuscleGroupType)).Where(item => item != "Unknown")), new { @class = "form-control", multiple="multiple" })
    </div>
    
    <button type="button" class="btn btn-default btn-sm" id="add-exercise-btn">Add exercise</button>
    <table class="table">
        <tr>
            <th>Exercise</th>
            <th>Sets</th>
            <th>Repeats</th>
        </tr>
    </table>
    <input type="submit" value="Save" class="btn btn-default" />
    @Html.ActionLink("Cancel", "Index", "Workout", new { }, new { @class = "btn btn-default" })
}
<table>
    <tr id="template-row">
        <td>
            @Html.DropDownList("WorkoutExercises[index].ExerciseId", (SelectList)ViewBag.Exercises, new { @class = "form-control" })
        </td>
        <td>
            @Html.TextBox("WorkoutExercises[index].Sets", null, new { @class = "form-control" })
        </td>
        <td>
            @Html.TextBox("WorkoutExercises[index].Repeats", null, new { @class = "form-control" })
        </td>
    </tr>
</table>
<script>
    $(function () {

        $('#template-row').hide();
        var index = 0;
        $('#add-exercise-btn').on('click', function () {
            var html = $('#template-row').html();
            html = html.replace(/index/g, index);
            $('table.table').append('<tr>' + html + '</tr>');
            index++;
        });
    });

</script>