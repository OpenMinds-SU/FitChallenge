@model Fmi.OpenMinds.FitChallenge.Web.Models.WorkoutViewModel
@using Fmi.OpenMinds.FitChallenge.Models

<h2>Edit workout</h2>
@using (Html.BeginForm())
{
    @Html.ValidationSummary()
    <p>Edit of the workout</p>
    <div class="form-group">
        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Enter name" })
    </div>
    <div class="form-group">
        @Html.Label("Muscle groups:")
        @Html.ListBox("MuscleGroups", new MultiSelectList(Enum.GetNames(typeof(MuscleGroupType)).Where(item => item != "Unknown"), Model.MuscleGroups.Select(item => item.ToString()).ToList()), new { @class = "form-control" })
    </div>

    <button type="button" class="btn btn-default btn-sm" id="add-exercise-btn">
        Add exercise
        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
    </button>
    <table class="table" id="tableExercises">
        <tr>
            <th>Exercise</th>
            <th>Sets</th>
            <th>Repeats</th>
        </tr>
        @if (Model.WorkoutExercises != null) 
        { 
            foreach (var workoutExercise in Model.WorkoutExercises)
            {
                int index = Model.WorkoutExercises.IndexOf(workoutExercise);
                <tr>
                    <td>
                        @Html.DropDownListFor(model => model.WorkoutExercises[index].ExerciseId, (SelectList)ViewBag.Exercises, new { @class = "form-control" })
                    </td>
                    <td>
                        @Html.TextBoxFor(m => m.WorkoutExercises[index].Sets, new { @class = "form-control" })
                    </td>
                    <td>
                        @Html.TextBoxFor(m => m.WorkoutExercises[index].Repeats, new { @class = "form-control" })
                    </td>
                    <td>
                        <button type="button" class="btn btn-default btn-group-sm" id="delete-exercise-btn">
                            Delete
                            <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                        </button>
                    </td>
                </tr>
            }
        }
    </table>
    <input type="submit" value="Save" class="btn btn-default" />
    @Html.ActionLink("Cancel", "Index", "Workout", new { }, new { @class = "btn btn-default" })
}
<table>
    <tr id="template-row">
        <td>
            @Html.DropDownList("WorkoutExercises[index].ExerciseId", (SelectList)ViewBag.Exercises, new { @class = "form-control" })
        </td>
        <td>
            @Html.TextBox("WorkoutExercises[index].Sets", null, new { @class = "form-control" })
        </td>
        <td>
            @Html.TextBox("WorkoutExercises[index].Repeats", null, new { @class = "form-control" })
        </td>
        <td>
            <button type="button" class="btn btn-default btn-group-sm removeRow" id="delete-exercise-btn">
                Delete
                <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
            </button>
        </td>
    </tr>
</table>
<script>
    $(function () {
        $('#template-row').hide();

        var index = $('table.table tr').length - 1;
        $('#add-exercise-btn').on('click', function () {
            var html = $('#template-row').html();
            html = html.replace(/index/g, index);
            $('table.table').append('<tr>' + html + '</tr>');
            index++;
        });

        $("#tableExercises").on("click", "#delete-exercise-btn", function () {
            $(this).closest('tr').remove();
        });
    });
</script>